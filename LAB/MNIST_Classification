{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MNIST_Classification","provenance":[],"authorship_tag":"ABX9TyN3PlqnfAv924hbReo4xygH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"pwz8fx65Bc1R","executionInfo":{"status":"ok","timestamp":1621486308618,"user_tz":-330,"elapsed":1395492,"user":{"displayName":"20WH1DB008 VALUGUBELLY ANUPAMA","photoUrl":"","userId":"02251695447687599737"}},"outputId":"30f60119-40dc-41fb-98d8-03a8dfc032e8"},"source":["from numpy import mean\n","from numpy import std\n","from matplotlib import pyplot\n","from sklearn.model_selection import KFold\n","from keras.datasets import mnist\n","from keras.utils import to_categorical\n","from keras.models import Sequential\n","from keras.layers import Conv2D\n","from keras.layers import MaxPooling2D\n","from keras.layers import Dense\n","from keras.layers import Flatten\n","from keras.optimizers import SGD\n","\n","# load train and test dataset\n","def load_dataset():\n","\t# load dataset\n","\t(trainX, trainY), (testX, testY) = mnist.load_data()\n","\t# reshape dataset to have a single channel\n","\ttrainX = trainX.reshape((trainX.shape[0], 28, 28, 1))\n","\ttestX = testX.reshape((testX.shape[0], 28, 28, 1))\n","\t# one hot encode target values\n","\ttrainY = to_categorical(trainY)\n","\ttestY = to_categorical(testY)\n","\treturn trainX, trainY, testX, testY\n","\n","# scale pixels\n","def prep_pixels(train, test):\n","\t# convert from integers to floats\n","\ttrain_norm = train.astype('float32')\n","\ttest_norm = test.astype('float32')\n","\t# normalize to range 0-1\n","\ttrain_norm = train_norm / 255.0\n","\ttest_norm = test_norm / 255.0\n","\t# return normalized images\n","\treturn train_norm, test_norm\n","# define cnn model\n","def define_model():\n","\tmodel = Sequential()\n","\tmodel.add(Conv2D(32, (3, 3), activation='relu', kernel_initializer='he_uniform', input_shape=(28, 28, 1)))\n","\tmodel.add(MaxPooling2D((2, 2)))\n","\tmodel.add(Flatten())\n","\tmodel.add(Dense(100, activation='relu', kernel_initializer='he_uniform'))\n","\tmodel.add(Dense(10, activation='softmax'))\n","\t# compile model\n","\topt = SGD(lr=0.01, momentum=0.9)\n","\tmodel.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])\n","\treturn model\n","\n","# evaluate a model using k-fold cross-validation\n","def evaluate_model(dataX, dataY, n_folds=5):\n","\tscores, histories = list(), list()\n","\t# prepare cross validation\n","\tkfold = KFold(n_folds, shuffle=True, random_state=1)\n","\t# enumerate splits\n","\tfor train_ix, test_ix in kfold.split(dataX):\n","\t\t# define model\n","\t\tmodel = define_model()\n","\t\t# select rows for train and test\n","\t\ttrainX, trainY, testX, testY = dataX[train_ix], dataY[train_ix], dataX[test_ix], dataY[test_ix]\n","\t\t# fit model\n","\t\thistory = model.fit(trainX, trainY, epochs=10, batch_size=32, validation_data=(testX, testY), verbose=0)\n","\t\t# evaluate model\n","\t\t_, acc = model.evaluate(testX, testY, verbose=0)\n","\t\tprint('> %.3f' % (acc * 100.0))\n","\t\t# stores scores\n","\t\tscores.append(acc)\n","\t\thistories.append(history)\n","\treturn scores, histories\n","# plot diagnostic learning curves\n","def summarize_diagnostics(histories):\n","\tfor i in range(len(histories)):\n","\t\t# plot loss\n","\t\tpyplot.subplot(2, 1, 1)\n","\t\tpyplot.title('Cross Entropy Loss')\n","\t\tpyplot.plot(histories[i].history['loss'], color='blue', label='train')\n","\t\tpyplot.plot(histories[i].history['val_loss'], color='orange', label='test')\n","\t\t# plot accuracy\n","\t\tpyplot.subplot(2, 1, 2)\n","\t\tpyplot.title('Classification Accuracy')\n","\t\tpyplot.plot(histories[i].history['accuracy'], color='blue', label='train')\n","\t\tpyplot.plot(histories[i].history['val_accuracy'], color='orange', label='test')\n","\tpyplot.show()\n","\n","# summarize model performance\n","def summarize_performance(scores):\n","\t# print summary\n","\tprint('Accuracy: mean=%.3f std=%.3f, n=%d' % (mean(scores)*100, std(scores)*100, len(scores)))\n","\t# box and whisker plots of results\n","\tpyplot.boxplot(scores)\n","\tpyplot.show()\n","\n","# run the test harness for evaluating a model\n","def run_test_harness():\n","\t# load dataset\n","\ttrainX, trainY, testX, testY = load_dataset()\n","\t# prepare pixel data\n","\ttrainX, testX = prep_pixels(trainX, testX)\n","\t# evaluate model\n","\tscores, histories = evaluate_model(trainX, trainY)\n","\t# learning curves\n","\tsummarize_diagnostics(histories)\n","\t# summarize estimated performance\n","\tsummarize_performance(scores)\n"," \n","# entry point, run the test harness\n","run_test_harness()"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","> 98.667\n","> 98.642\n","> 98.525\n","> 98.867\n","> 98.683\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:73: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:78: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["Accuracy: mean=98.677 std=0.110, n=5\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}